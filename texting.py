from telethon import TelegramClient, events, sync
import time
from bard import answer
import datetime
import Message
from colorama import Fore, Style
from Message import Message, init_db

def dm(client): 
    @client.on(events.NewMessage)# –∂–¥–µ–º —Å–æ–±—ã—Ç–∏–µ
    async def my_event_handler(event):

        print(datetime.datetime.now())
        sender = await event.get_sender()#–≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
        print("–ø—Ä–∏–Ω—è–ª", Fore.GREEN + event.raw_text, Style.RESET_ALL + "\n –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ", Fore.GREEN + "@", sender.username," ", sender.first_name," ", sender.last_name , Style.RESET_ALL + ".")
        
        

        if event.is_private:#–µ—Å–ª–∏ —ç—Ç–æ –ª–∏—á–∫–∞
            q, e = answer(event.raw_text, shorting = False)
            try:
                await client.send_message(sender,q)
            except Exception as e:
                print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            print ("–û—Ç–ø—Ä–∞–≤–∏–ª: \n", Fore.YELLOW + q + Style.RESET_ALL, e)
        
        elif event.is_group:#–µ—Å–ª–∏ —ç—Ç–æ –≥—Ä—É–ø–ø–∞
            
            mes = Message(userId=event.sender_id, userName=sender.username, displayName=sender.first_name, token=0) 
            print ('–≠—Ç–æ –≥—Ä—É–ø–ø–∞')
            
            if (event.message.mentioned or  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–ø–æ–º—è–Ω—É—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        (event.message.is_reply and (await event.message.get_reply_message()).sender_id == 6373123783)):  # —á—Ç–æ–± –æ–Ω —Å–∞–º —Å–µ–±–µ –Ω–µ –æ—Ç–≤–µ—á–∞–ª
                

                print (Fore.GREEN + "–£–ø–æ–º—è–Ω—É—Ç", Style.RESET_ALL)

                if event.raw_text == "ü¶ä!!" and event.raw_text != "—Å–º—Å": #–≤—ã–≤–æ–¥
                    mes.reset_all_tokens()
                    try:
                        result = ""
                        for item in mes.get_all_messages(): 
                            id, userId, userName, displayName, token = item
                            # result += f"userName: {userName}, displayName: {displayName}, token: {token}\n"
                            result += f"[{displayName}](t.me/{userName}) - {token}\n"
                        await client.send_message(event.chat_id, result , parse_mode='markdown', link_preview=False, reply_to=event.message.id)
                    except Exception as e:
                        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤—ã–≤–æ–¥–∞ –µ–±–∞—Ç—å :  {e}")


                if event.raw_text == "ü¶äü¶äü¶äü¶ä" and event.raw_text != "—Å–º—Å": #–≤—ã–≤–æ–¥
                    try:
                        result = ""
                        for item in mes.get_all_messages(): 
                            id, userId, userName, displayName, token = item
                            # result += f"userName: {userName}, displayName: {displayName}, token: {token}\n"
                            result += f"[{displayName}](t.me/{userName}) - {token}\n"
                        await client.send_message(event.chat_id, result , parse_mode='markdown', link_preview=False, reply_to=event.message.id)
                    except Exception as e:
                        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤—ã–≤–æ–¥–∞ –µ–±–∞—Ç—å :  {e}")
                
                else:
                    if Message.get_user_token(event.sender_id) < 12000:
                        ans, tokens = answer("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º" + sender.first_name + "–≥–æ–≤–æ—Ä–∏—Ç" + event.raw_text, True)
                    else:
                        ans = "–≤—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –ª–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤"
                        tokens = 0
                    mes.write_token(tokens)
                    mes.save_to_db()

                    try:

                        if event.raw_text != "-—Å–º—Å": #—á—Ç–æ–± –æ–Ω –∏—Ä–∏—Å—É –Ω–µ –æ—Ç–≤–µ—á–∞–ª

                            await client.send_message(event.chat_id, ans, reply_to=event.message.id) 
                    
                    except Exception as e:
                        try:

                            if event.raw_text != "-—Å–º—Å": 
                                await client.send_message(event.chat_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}", reply_to=event.message.id)
                                await client.send_file(event.chat_id, 'sticker.webp')
                            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
                        except Exception as e:
                            print(f"—Å —Ç–µ–ª–µ–≥–æ–π: {e}")

    async def main():
        await client.start()
        print(datetime.datetime.now())
        init_db()
        print("–ê —è —É–∂–µ —Ä–∞–±–æ—Ç–∞—é!")
        await client.run_until_disconnected()


    with client: #–≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–æ—Ç–æ—Ä–æ–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–ª–∏–µ–Ω—Ç
        client.loop.run_until_complete(main())